#!/usr/bin/python
# -*- coding: utf-8 -*-
# (C) Edoderoo/Edoderoobot (meta.wikimedia.org), 2016–2019
# Distributed under the terms of the CC-BY-SA 3.0 licence.
#Q13005188 mandal
'''
jsub -N aa python3 ./core/pwb.py ./core/np/nldes3 a3r sparql:Q23038290
python3 pwb.py np/nldes3 allkeys
python3 pwb.py np/nldes3 sparql:Q820655
python3 pwb.py np/nldes3 a3r sparql:Q728937 railway
python3 pwb.py np/nldes3 a3r sparql:Q7604686
python3 pwb.py np/nldes3 a3r sparql:Q27020041
python3 pwb.py np/nldes3 a3r sparql:Q484170 #بلدية في فرنسا
python3 pwb.py np/nldes3 a3r sparql:Q262166 #بلدية في ألمانيا
python3 pwb.py np/nldes3 a3r sparql:Q22865 #بلدية في ألمانيا
python3 pwb.py np/nldes3 a3r sparql:Q3184121 #بلدية في البرازيل
python3 pwb.py np/nldes3 a3r sparql:Q6784672 #بلدية في سلوفاكيا
python3 pwb.py np/nldes3 a3r sparql:Q667509 #بلدية في النمسا
python3 pwb.py np/nldes3 a3r sparql:Q24764  #بلدية في الفلبين
python3 pwb.py np/nldes3 a3r sparql:Q2039348  #بلدية في هولندا
python3 pwb.py np/nldes3 a3r sparql:Q57058  #بلدية في كرواتيا
python3 pwb.py np/nldes3 a3r sparql:Q1054813  #بلدية في اليابان
python3 pwb.py np/nldes3 a3r sparql:Q1758856  #بلدية في مالي
python3 pwb.py np/nldes3 a3r sparql:Q747074  #بلدية إيطالية
python3 pwb.py np/nldes3 a3r sparql:Q493522  #بلدية في بلجيكا
python3 pwb.py np/nldes3 a3r sparql:Q755707  #بلدية في النرويج
python3 pwb.py np/nldes3 a3r sparql:Q1349648  #بلدية في اليونان
python3 pwb.py np/nldes3 a3r sparql:Q127448  #بلدية في السويد
python3 pwb.py np/nldes3 a3r sparql:Q1906268  #بلدية في بلغاريا
python3 pwb.py np/nldes3 a3r sparql:Q856076  #بلدية في فنلندا
python3 pwb.py np/nldes3 a3r sparql:Q378508  #بلدية في أنغولا
# أنواع البلديات
SELECT ?item2 ?item2Label (COUNT(?item) AS ?count) WHERE {
  ?item wdt:P31 ?item2.
  FILTER NOT EXISTS { ?item schema:description ?itemar. FILTER((LANG(?itemar)) = 'ar') }
  ?item2 wdt:P279 wd:Q15284.
  SERVICE wikibase:label {
    bd:serviceParam wikibase:language 'ar,en,bl' .
  }
}
group by ?item2 ?item2Label
#------
pywikibot\.ItemPage\(repo\,(.*?)\.title\(\)\)
python3 pwb.py np/nldes3 a3r sparql:Q184188      #كانتون فرنسي
python3 pwb.py np/nldes3 a3r sparql:Q7930614     #قرية في تايوان
python3 pwb.py np/nldes3 a3r sparql:Q56436498    #قرية في الهند
python3 pwb.py np/nldes3 a3r sparql:Q1983062     #حلقة
python3 pwb.py np/nldes3 a3r sparql:Q21191270    #حلقة مسلسل تلفزيوني
python3 pwb.py np/nldes3 a3r sparql:Q571         #كتاب
python3 pwb.py np/nldes3 a3r sparql:
python3 pwb.py np/nldes3 a3r sparql:
python3 pwb.py np/nldes3 a3r sparql:
Q842478
#!/usr/local/bin/python
# -*- coding: utf-8 -*-
python3 pwb.py np/nldes3 a3r sparql:Q7366  # أغنية
python3 pwb.py np/nldes3 a3r sparql:Q5398426
python3 pwb.py np/nldes3 a3r sparql:Q13417250   #مقاطعة في أذربيجان
python3 pwb.py np/nldes3 a3r sparql:Q215380
python3 pwb.py np/nldes3 a3r sparql:Q83373   # نجم زائف
python3 pwb.py np/nldes3 a3r sparql:Q13890   # نجم مزدوج
python3 pwb.py np/nldes3 a3r sparql:Q6999    # جرم فلكي
python3 pwb.py np/nldes3 a3r sparql:Q569500  # مركز صحي
python3 pwb.py np/nldes3 a3r sparql:Q54050   # تل
python3 pwb.py np/nldes3 a3r sparql:Q39614   # مقبرة
python3 pwb.py np/nldes3 a3r sparql:Q123705  # حي سكني
python3 pwb.py np/nldes3 a3r sparql:Q12323   # سد
python3 pwb.py np/nldes3 a3r sparql:Q22698   # متنزه
python3 pwb.py np/nldes3 a3r sparql:Q131681  #  خزان مائي
python3 pwb.py np/nldes3 a3r sparql:Q4421    #غابة
python3 pwb.py np/nldes3 a3r sparql:Q180958    #كلية
python3 pwb.py np/nldes3 a3r sparql:Q179700    #تمثال
python3 pwb.py np/nldes3 a3r sparql:Q30022    #مقهى
python3 pwb.py np/nldes3 a3r sparql:Q4989906    #معلم تذكاري
#======
python3 pwb.py np/nldes3 a3r sparql:Q184188 ask #كانتون فرنسي
python3 pwb.py np/nldes3 a3r sparql:Q783866 ask #
python3 pwb.py np/nldes3 a3r sparql:Q783866 ask #
python3 pwb.py np/nldes3 a3r sparql:Q783866 ask #
python3 pwb.py np/nldes3 a3r sparql:Q783866 ask #
python3 pwb.py np/nldes3 a3r sparql:Q3331189  #طبعة
python3 pwb.py np/nldes3 a3r sparql:Q783866  #مكتبة جافا سكريبت
python3 pwb.py np/nldes3 a3r sparql:Q14752149  #نادي كرة قدم للهواة
python3 pwb.py np/nldes3 a3r sparql:Q476028  #نادي كرة قدم
python3 pwb.py np/nldes3 a3r sparql:Q620615  #تطببيق محمول
python3 pwb.py np/nldes3 a3r sparql:Q2831984   #ألبوم قصص مصورة
python3 pwb.py np/nldes3 a3r sparql:Q7187     # جين
python3 pwb.py np/nldes3 a3r sparql:Q277338     # جين كاذب
python3 pwb.py np/nldes3 a3r sparql:Q19389637     مقالة سيرة ذاتية
python3 pwb.py np/nldes3 a3r sparql:Q3305213  # لوحة فنية بواسطة
python3 pwb.py np/nldes3 a3r sparql:Q7889    # لعبة فيديو
python3 pwb.py np/nldes3 a3r sparql:Q8054     # بروتين
python3 pwb.py np/nldes3 a3r sparql:Q7278     # حزب سياسي
'''
import pywikibot
from pywikibot import pagegenerators as pg
from pywikibot.data import api
import codecs
from API.maindir import main_dir
import random
import re
from API import printe
import sys
import datetime
from datetime import datetime, date, time, timedelta
#======
# start of himoAPI.py file
from API import himoAPI
from API import himoBOT2
from API import himoBOT
#------
#====== == == == == == == == == == == == ==
from API.descraptions import Qid_Descraptions
#======
debugedo=True   #use one item, just to test
debugedo=False  #use wd-query, process a lot
#demoniem = P1549
geborenCLAIM =     'P569'
gestorvenCLAIM=    'P570'
is_eenCLAIM=       'P31'
genderCLAIM =      'P21'
countryCLAIM =     'P17'
female_genderPROP ='Q6581072'
male_genderPROP =  'Q6581097'
gelegen_inCLAIM=   'P131'
beroepCLAIM=       'P106'
items2do = 0    #global parameter to print progress
commit=False    #no changes online, only to the logfiles
commit=True     #write changes to the database
CheckFilled=True
NoCheckFilled=False
SkipFilled=True
ReplaceContents=False
MultiLanguage=True
mailstart=datetime.now()
mailmessage='<default message>'
totaledits=0
lng_canbeused = ['en','de','fr','it','es','pt','ca','dk','cs','hr','nl','ro','sh','vi','eo','simple','eu','zea','li','fy','oc','af','nb','no','pl','si','sv','wa',]
default_query = 'claim[31:5] and claim[106] and claim[27] and link[nlwiki]'  # people with an occupation, a country and a page on nl-wiki
default_query = 'link[nlwiki]'   # just go along all nl-wiki articles, and see by P31 what you can do
update_label_allowed = []
#------
run_lng = 'nl'
txt2skip = '|skip!|'
output2screen = False
prelog = True
prelog = False   #if set to True, it will write an extra logfile containing the item before it is processed, helpful in case of an error on unknown items
skiplog= True
#------
#------
QSlimit = { 1 : 200 }
sparqler = { 1 : '' }
Offq = { 1 : 0 }
Off = { 1 : 0 }
limit = { 1 : 0 }
#------
totallimit = { 1 : 10000 }
#------
Labels_Csash = { 'ar' : {} }
#------
#======
#------
from np.cash import *# Labels_Csash
from np.np_lists import *
#------
for arg in sys.argv:
    #------
    arg, sep, value = arg.partition(':')
    #------
    if arg.startswith('-') : arg = arg[1:]
    #------
    if arg == 'off':
        Off[1] = int(value)
        printe.output('Off[1] = %d' % Off[1])
    #------
    if arg == 'offq':
        Offq[1] = int(value)
        printe.output('Offq[1] = %d' % Offq[1])
    #------
    if arg == 'totallimit' or arg == 'all' :
        totallimit[1] = int(value)
        printe.output('totallimit[1] = %d' % totallimit[1])
    #------
    if arg == 'limit':
        limit[1] = int(value)
        printe.output('limit[1] = %d' % limit[1])
    #------
    if arg == 'qslimit':
        QSlimit[1] = int(value)
        printe.output('QSlimit[1] = %d' % QSlimit[1])
    #------
    if arg == 'sparql':
        sparqler[1] = value
        printe.output( 'sparqler[1] = "%s"' % sparqler[1] )
#------
def get_lng_description(language, wikidataitem):
    if type(wikidataitem) == dict:
        if language in wikidataitem.get('descriptions',{}):
            return wikidataitem.get('descriptions',{})[language]
    else:
        if language in wikidataitem.get('descriptions',{}):
            return wikidataitem.get('descriptions',{}).get(language,'')
    return ''
#------
def its_a_generalthing( lng , wditem , shortstr,longdescrstr,myclaim, item = {} ):
    #------
    #claimstr = ''
    claimstr = just_get_ar(item.get( 'lab' , '' ))
    #------
    pp = wditem.get('claims',{}).get(myclaim,[])
    #------
    for x in pp:
        LNKitem = x.get('mainsnak',{}).get('datavalue',{}).get('value',{}).get('id','')
        if claimstr == '' :
            claimstr = Get_label( LNKitem )
    #------
    claimstr = claimstr.strip()
    if claimstr == '':
        return shortstr , ''
    #------
    laste = '%s %s' % ( longdescrstr.strip() , claimstr )
    laste = laste.replace( 'جين في إنسان عاقل', 'جين من أنواع جينات الإنسان العاقل' )
    #------
    printe.output('laste:(%s)' % laste)
    return (laste, '')
#------
def get_label_txt( lng, wdi,property,array=0,fallback=False):
  #try:
   if property in wdi.get('claims',{}):
    if (len(wdi.get('claims',{}).get(property,''))>array):
      lnkProperty=wdi.get('claims',{}).get(property)[array].getTarget()
      propwdi=himoBOT2.Get_Item_API_From_Qid( lnkProperty ) #xzo
      if propwdi:
       if ( lng in propwdi.get('labels',{})):
        return(propwdi.get('labels',{}).get(lng,''))
       elif (fallback):
         if lng != 'ar' :
             for fallbacklng in lng_canbeused:
               if fallbacklng in propwdi.get('labels',{}):
                 return(propwdi.get('labels',{}).get(fallbacklng,''))
  #except:
    #print('get_label failed')
   return('')
#------
def its_a_headquarted_thing( lng, wdi,thing):
  where=get_label_txt( lng, wdi,'P159',fallback=True)
  if (where != ''):
    return('{} {}'.format(thing,where),'')
  else:
    return('',wdi)
#======
def its_something_in_an_entity( lng, wdi, something):
    prnEntity = ''
    prnCountry = ''
    #gelegen_inCLAIM    #P131
    #countryCLAIM   #P17
    LNKentity = wdi.get('claims',{}).get(gelegen_inCLAIM,[{}])[0].get('mainsnak',{}).get('datavalue',{}).get('value',{}).get('id','')#.getTarget()
    if LNKentity != '':
        prnEntity = Get_label( LNKentity )
    #else:
        #return('',txt2skip)
    #------
    LNKcountry = wdi.get('claims',{}).get(countryCLAIM,[{}])[0].get('mainsnak',{}).get('datavalue',{}).get('value',{}).get('id','')#.getTarget()
    if LNKcountry != '':
        prnCountry = Get_label( LNKcountry )
    #------
    if prnCountry != '' and prnEntity != '' :
        return '%s %s، %s' % (something, prnEntity, prnCountry) , ''
    elif prnCountry != '' :
        return '%s %s' % (something, prnCountry) , ''
    elif prnEntity != '' :
        return '%s %s' % (something, prnEntity) , ''
    #------
    return '', txt2skip
    #------
#======
def Get_label( qid , item = False ):
    #------
    lng = 'ar'
    label = ''
    #------
    if not lng in Labels_Csash:
        Labels_Csash[lng] = {}
    #------
    if qid in Labels_Csash.get( lng,{}):
        return Labels_Csash[lng][qid]
    #------
    if qid == '' :
        return label
    #------
    WDI = item
    if not WDI :
        WDI = himoBOT2.Get_Item_API_From_Qid( qid , sites = '' , titles = '', props = 'labels' )
    #------
    if lng in WDI.get('labels',{}) :
        label = WDI.get('labels',{})[lng]
    #------
    if label != '' :
        label = label.replace(" (كوكبة)",'')
        label = label.replace(" (نجم)",'')
        label = label.replace(" (مجرة)",'')
        #label = label.replace("كوكبة ",'')
        Labels_Csash[lng][qid] = label
    #------
    return label
#======
def get_female_for_p17( contry_lab , type ):
    #------
    if contry_lab.strip() == '' : return ''
    #------
    lab = nationalities.get(contry_lab,{}).get(type,'')
    #------
    if not contry_lab in nationalities:
        printe.output( 'contry_lab:%s not in nationalities' % contry_lab )
    #------
    return lab
#======
def its_something_in_a_country( lng, wdi, something, skipiffilled):
    #------
    printe.output( 'its_something_in_a_country,something:%s' % something )
    #------
    prnCountry = ''
    if skipiffilled and wdi.get('descriptions',{}).get( lng,'') != '' :
        #return(wdi.get('descriptions',{})[lng],txt2skip)
        printe.output( "return '' , ''" )
        return '' , ''
    #------
    Claims = wdi.get('claims',{})
    #------countryCLAIM = 'P17'
    missing = ''
    if countryCLAIM in Claims:
        LNKcountry = Claims.get(countryCLAIM)[0].get('mainsnak',{}).get('datavalue',{}).get('value',{}).get('id','')#.getTarget()
        #if ( lng in WDIcountry.get('labels',{})):
        prnCountry = Get_label( LNKcountry )
        #else :
          #prnCountry = 'n/a = '
          #missing = WDIcountry#.title()
    #------
    #elif 'P495' in Claims :
    if prnCountry == '' and 'P495' in Claims :
        LNKcountry = Claims.get('P495')[0].get('mainsnak',{}).get('datavalue',{}).get('value',{}).get('id','')#.getTarget()
        #if ( lng in WDIcountry.get('labels',{})):
            #prnCountry = WDIcountry.get('labels',{})[lng]
        prnCountry = Get_label( LNKcountry )
    #------
    #elif 'P131' in Claims :
    if prnCountry == '' and 'P131' in Claims :
        LNKcountry = Claims.get('P131')[0].get('mainsnak',{}).get('datavalue',{}).get('value',{}).get('id','')#.getTarget()
        #if ( lng in WDIcountry.get('labels',{})):
            #prnCountry = WDIcountry.get('labels',{})[lng]
        prnCountry = Get_label( LNKcountry )
        #else :
          #prnCountry = 'n/a = '
          #missing = WDIcountry#.title()
    #------
    #else:
      #return('' ,txt2skip)
      #return('' ,txt2skip)
    #------
    printe.output( 'prnCountry:%s' % prnCountry )
    #------
    fanee = something.strip()
    #------
    ande = ' في '
    #------
    females = [
        'شركة طيران',
        'شركة',
        'منظمة',
        ]
    #------
    males = [
        'قانون تشريعي',
        'برنامج تلفزيوني',
        'مسلسل تلفزيوني',
        'طاقم موسيقي',
        'حزب سياسي',
        'نادي كرة قدم للهواة',
        'نادي كرة قدم',
        ]
    if fanee in males:
        ande = ' من '
    #------
    dara = ande.strip() + ' ' + prnCountry.strip()
    #------
    if something.strip() in males :
        ma = get_female_for_p17( prnCountry.strip() , 'man' )
        if ma != '' :
            dara = ma
            if something.strip() == 'نادي كرة قدم للهواة' : something = 'نادي كرة قدم'
    #------
    elif something.strip() in females :
        f = get_female_for_p17( prnCountry.strip() , 'women' )
        if f != '' : dara = f
    #------
    if prnCountry != '':fanee = something.strip() + ' ' + dara.strip()
    #------
    printe.output( "return(%s,missing)" % fanee )
    #------
    return fanee,missing
#------
def its_canton_of_France( lng , wdi ):#Q184188
    #gelegen_inCLAIM = 'P131'
    clai = wdi.get('claims',{})
    current_desc = wdi.get('descriptions',{}).get('ar','')
    missing = ''
    desco = 'كانتون فرنسي'
    if current_desc == '' :
        if gelegen_inCLAIM in clai:
            LNKcommunity = clai.get(gelegen_inCLAIM)[0].get('mainsnak',{}).get('datavalue',{}).get('value',{}).get('id','')#.getTarget()
            label = Get_label( LNKcommunity )
            if label != '' :
                label = label.replace('، فرنسا','').replace(' (فرنسا)','')
                desco = 'كانتون في ' + label + '، فرنسا'
            #if lng in WDIcommunity.get('labels',{}):
                #desco = 'كانتون في ' + WDIcommunity.get('labels',{}).get(lng,'') + '، فرنسا'
    else:
        missing = txt2skip
    return desco , missing
def its_disambigue( lng, wdi):
    if ( lng in wdi.get('descriptions',{})) or (len(wdi.get('claims',{}))>1):   #there is already a description, skip this one
        return('',txt2skip)
    return('Wikimedia-doorverwijspagina','')      #use default description
def its_a_publication( lng, wditem ):
  over=uitgever=missing=datumstr=''
  if ('P921' in wditem.get('claims',{})):
    over,missing=its_a_generalthing( lng , wditem , '', 'over', 'P921')
  if ('P123' in wditem.get('claims',{})):
    uitgever,missing=its_a_generalthing( lng , wditem , '','van uitgever','P123')
  if ('P577' in wditem.get('claims',{})):
    datumstr,missing='',''
  return('publicatie',missing)
def its_an_episode( lng, wditem):
    if lng in wditem.get('descriptions',{}):
        return wditem.get('descriptions',{})[lng],txt2skip
    if 'P179' in wditem.get('claims',{}): #serie
        LNKseries = wditem.get('claims',{}).get('P179')[0].get('mainsnak',{}).get('datavalue',{}).get('value',{}).get('id','')#.getTarget()
        serienaam = Get_label( LNKseries )
        #if (serienaam == '') or (missing == txt2skip):
        if serienaam != '' :
            serienaam = serienaam.replace('، مسلسل','').replace(' (مسلسل)','')
            return 'حلقة من سلسلة ' + serienaam , ''
    return('',txt2skip)
def its_a_discography( lng, wditem ):
  if 'P175' in wditem.get('claims',{}):
    artistLNK = wditem.get('claims',{}).get('P175')[0].get('mainsnak',{}).get('datavalue',{}).get('value',{}).get('id','')#.getTarget()
    if not(artistLNK is None):
      wdArtist=himoBOT2.Get_Item_API_From_Qid( artistLNK ) #xzo
      if lng in wdArtist.get('labels',{}):
        return ('discografie van '+wdArtist.get('labels',{}).get(lng,''),'')
      else:
        if lng != 'ar' :
            for trylng in lng_canbeused:
              if trylng in wdArtist.get('labels',{}):
                return('discografie van '+wdArtist.get('labels',{}).get(trylng,''),'')
  return('discografie','')
def action_one_P131_item( lng, oneitem):
   global totaledits
   if ( lng in oneitem.get('descriptions',{})):
     nld=oneitem.get('descriptions',{}).get(lng,'')
   else :
     nld=''
   if ( lng in oneitem.get('labels',{})):
     nll = oneitem.get('labels',{}).get(lng,'')
   else:
     nll = ''
   adminname=''
   isaname=''
   countryname=''
   if ('P31' in oneitem.get('claims',{})):
     LNKisa=oneitem.get('claims',{}).get('P31')[0].get('mainsnak',{}).get('datavalue',{}).get('value',{}).get('id','')#.getTarget()
     if not LNKisa is None:
       isa=himoBOT2.Get_Item_API_From_Qid( LNKisa ) #xzo
       if lng in isa.get('labels',{}):
         isaname = isa.get('labels',{}).get(lng,'')
   if (isaname in ['dorp in China']):
      shortname='قرية'
   else:
      shortname=isaname
   if (gelegen_inCLAIM in oneitem.get('claims',{})):
     LNKadmin=oneitem.get('claims',{}).get(gelegen_inCLAIM)[0].get('mainsnak',{}).get('datavalue',{}).get('value',{}).get('id','')#.getTarget()
     if not LNKadmin is None:
       admin=himoBOT2.Get_Item_API_From_Qid( LNKadmin ) #xzo
       if lng in admin.get('labels',{}):
         adminname = admin.get('labels',{}).get(lng,'')
   if (countryCLAIM in oneitem.get('claims',{})):
     LNKcountry=oneitem.get('claims',{}).get(countryCLAIM)[0].get('mainsnak',{}).get('datavalue',{}).get('value',{}).get('id','')#.getTarget()
     if not LNKcountry is None:
       country=himoBOT2.Get_Item_API_From_Qid( LNKcountry ) #xzo
       if lng in country.get('labels',{}):
         countryname = country.get('labels',{}).get(lng,'')
   data={}
   found=False
   if (not lng in oneitem.get('labels',{})):
     if lng != 'ar' :
         for plang in lng_canbeused:
           if (plang in oneitem.get('labels',{})) and not found:
             data.update({'labels': { lng:oneitem.get('labels',{}).get(plang,'')  }})
             found=True
   if (adminname == ''):
     newdescription = '%s' % isaname
   else:
     newdescription='%s in %s, %s' % (shortname,adminname,countryname)
   if (isaname != '') and (nld in['','قرية','dorp in China','gemeente','gemeente in China']):
     data.update({'descriptions': { lng: newdescription }})
   #------
   try:
     oneitem.editEntity(data,summary='nl-description, [[User:Edoderoobot/Set-nl-description|python code]], logfile on https://goo .gl/BezTim')
     totaledits += 1
     return(1)
   except ValueError:
     print("ValueError occured on %s",oneitem.title())
   except :
     print("Undefined error occured on %s-[%s]",oneitem.title(),'simpleP131')
     pass
   else :
     pass #print("Else:")
   #------
   return(0)
#------
def its_an_audio_drama( lng, wditem ):
  if ('P179' in wditem.get('claims',{})):
    return its_a_generalthing( lng , wditem , 'hoorspel','hoorspel van','P50')
  if ('P50' in wditem.get('claims',{})):
    return its_a_generalthing( lng , wditem , 'hoorspel','hoorspel van','P50')
  if ('P495' in wditem.get('claims',{})):
    return its_a_generalthing( lng , wditem , 'hoorspel','hoorspel uit','P495')
  return('hoorspel','')
def its_a_taxon( lng, wditem ):
  '''
  read P171/mother taxon until taxo-rang/P105 is <Q19970288/no value> -> that mother taxon is the first part (insect/)
  '''
  if ( lng in wditem.get('descriptions',{})):
    return(wditem.get('descriptions',{})[lng],'')
  return('taxon','')
def its_a_composition( lng, wditem):
  '''
  find composer P86
  '''
  if ('P86' in wditem.get('claims',{})):
    composerLNK = wditem.get('claims',{}).get('P86')[0].get('mainsnak',{}).get('datavalue',{}).get('value',{}).get('id','')#.getTarget()
    if not composerLNK is None:
      composer = himoBOT2.Get_Item_API_From_Qid( composerLNK ) #xzo
      if ( lng in composer.get('labels',{})):
        return('compositie van %s' % composer.get('labels',{}).get(lng,''), '')
  return('compositie','')
def its_a_tabon_in_thailand( lng, wditem ):
  newdescription = ''
  if (gelegen_inCLAIM in wditem.get('claims',{})):
    LNKtambon=wditem.get('claims',{}).get(gelegen_inCLAIM)[0].get('mainsnak',{}).get('datavalue',{}).get('value',{}).get('id','')#.getTarget()
    if not (LNKtambon is None):
      WDitemtambon=himoBOT2.Get_Item_API_From_Qid( LNKtambon ) #xzo
      return(Get_label_from_item( lng,WDitemtambon))
  return(newdescription,'')
def Get_label_from_item( lng, wditem):
    if wditem and type(wditem) == dict:
        labels = wditem.get('labels',{})
        #------
        if lng in labels:
            return (labels[lng],'')
    #------
    return '',''
def its_a_fictional_character( lng, wditem ):
  if ('P1441' in wditem.get('claims',{})):
    my_description , missing = its_a_generalthing( lng , wditem , 'personage','personage uit','P1441')
  elif ('P1080' in wditem.get('claims',{})):
    my_description , missing = its_a_generalthing( lng , wditem , 'personage','personage uit','P1080')
  else:
    my_description='personage'
    missing=''
  return (my_description , missing)
def its_a_computergame( lng, wditem):
    printe.output( ' its_a_computergame ' )
    if ('P178' in wditem.get('claims',{})): # المطور
        LNKdeveloper=wditem.get('claims',{}).get('P178')[0].get('mainsnak',{}).get('datavalue',{}).get('value',{}).get('id','')#.getTarget()
        if not (LNKdeveloper is None):
            WDitemdeveloper=himoBOT2.Get_Item_API_From_Qid( LNKdeveloper )
            developer_name,missing=Get_label_from_item( lng,WDitemdeveloper)
            if (developer_name != ''):
                return('لعبة فيديو من تطوير %s'% developer_name,'')
#------
    if ('P179' in wditem.get('claims',{})):#السلسلة
        serieLNK=wditem.get('claims',{}).get('P179')[0].get('mainsnak',{}).get('datavalue',{}).get('value',{}).get('id','')#.getTarget()
        if not(serieLNK is None):
            WDitemserie= himoBOT2.Get_Item_API_From_Qid( serieLNK )
            seriename,missing=Get_label_from_item( lng,WDitemserie)
            if (seriename != ''):
                #return('computerspel uit de serie %s' % seriename,'')
                return('لعبة فيديو من سلسلة %s' % seriename,'')
    return('لعبة فيديو','')
#------
New_QS = { 1 : [] }
#======
def descqs( q , value , lang ):
    if len(New_QS[1]) < QSlimit[1]:
        qsline = '%s|D%s|"%s"' % ( q, lang , value )
        New_QS[1].append( qsline )
        printe.output( "<<lightyellow>>a %d\t%d:add %s to qlline." % (len(New_QS[1]) , QSlimit[1] , qsline  )  )
    else:
        printe.output( "<<lightgreen>> Add %d line to quickstatements" % len(New_QS[1]) )
        himoAPI.QS_line( "||".join( New_QS[1] ) , user = "Mr.Ibrahembot" )
        New_QS[1] = []
#======
def Add_desc( q , value , lang ):
    if 'descqs' in sys.argv:
        descqs( q , value , lang )
    else:
        himoAPI.Des_API( q , value , lang , ask = '')
#======
def Make_space_desc( lng , wditem , type_of_item , orig_desc, item = {} ):
    my_description , missing = '' , ''
    #------
    #q = wditem['item'].split("/entity/")[1]
    #------
    printe.output("Make_space_desc::")
    #------
    # Q476028
    if type_of_item == 'Q476028': #نادي كرة قدم
        if orig_desc in ['نادي كرة قدم'] :
            my_description , missing = its_something_in_a_country(lng, wditem , 'نادي كرة قدم',True)
    #------
    elif type_of_item == 'Q265158' and orig_desc in ['','مراجعة'] :
        my_description, missing = its_a_generalthing( lng, wditem, 'مراجعة','مراجعة منشورة في','P1433')
    #------
    elif type_of_item == 'Q13433827' and orig_desc in ['','مقالة موسوعية'] :
        my_description, missing = its_a_generalthing( lng, wditem, 'مقالة موسوعية','مقالة في','P1433')
    #------
    elif type_of_item == 'Q191067' and orig_desc in ['مقالة',''] :
        my_description, missing = its_a_generalthing( lng , wditem , 'مقالة','مقالة في ','P1433')
    #------
    elif type_of_item == 'Q2467461':
        my_description = 'قسم أكاديمي'
    #------
    elif type_of_item == 'Q14752149':  #amateur football club
        if orig_desc in ['','نادي كرة قدم للهواة'] :
            my_description , missing = its_something_in_a_country(lng, wditem , 'نادي كرة قدم للهواة',False)
    #------
    elif type_of_item == 'Q96739634':
        if orig_desc in ['','حركة فردية'] :
            my_description , missing = its_a_generalthing( lng , wditem , 'حركة فردية','حركة فردية بواسطة','P50')
    #------
    elif type_of_item in p50s :
        if orig_desc in ['', 'عمل أدبي', p50s[type_of_item]['ar'] ] :
            my_description, missing = its_a_p50( type_of_item, wditem, p50s[type_of_item]['ar'], item=item )
    #------
    elif type_of_item == 'Q7278': #political party
        if orig_desc in ['حزب سياسي',''] :
            my_description , missing = its_something_in_a_country(lng, wditem,'حزب سياسي' , False )
    #------
    elif type_of_item == 'Q7889':  #computerspel  genre=P136   ontwikkelaar=P178  uitgeverij=P123
        if orig_desc in ['لعبة فيديو',''] :
            my_description , missing = its_a_computergame( lng, wditem )
    #------
    elif type_of_item == 'Q3305213': #لوحة فنية بواسطة P170
        if orig_desc in ['لوحة فنية','']:
            my_description , missing = its_a_generalthing( lng , wditem , 'لوحة فنية','لوحة فنية بواسطة','P170' )
    #------
    elif type_of_item == 'Q19389637':
        short = 'مقالة سيرة ذاتية'
        if (orig_desc in [ short ,'']) or (orig_desc.find( short ) == 0):
            printe.output("work in Q19389637")
            #my_description , missing='biografisch artikel',''
            my_description , missing = its_a_generalthing( lng , wditem , short,'مقالة سيرة ذاتية للمؤلف','P50' )
            #------
            if my_description == short :
                my_description , missing = its_a_generalthing( lng , wditem , short,'مقالة سيرة ذاتية منشورة في','P1433' )
            #------
            if my_description == short :
                my_description , missing = its_a_generalthing( lng , wditem , short,'مقالة سيرة ذاتية عن','P921' )
    #------
    #------
    elif type_of_item == 'Q7187':
        if (orig_desc in ['جين','']):
            my_description , missing = its_a_generalthing( lng , wditem , 'جين','جين في ','P703' )
    #------
    # جين كاذب
    elif type_of_item == 'Q277338':
        if orig_desc in ['جين كاذب','جين','speudogen',''] :
            my_description , missing = its_a_generalthing( lng , wditem , 'جين كاذب','جين كاذب في ','P703' )      #P1057 #fixed
    #------
    # بروتين
    elif type_of_item == 'Q8054':
        if (orig_desc in ['بروتين','']) :
            my_description , missing = its_a_generalthing( lng , wditem , 'بروتين','بروتين في ','P703' )
          #
    #------
    elif type_of_item == 'Q2831984': #ألبوم قصص مصورة uit de serie P179
        if orig_desc in ['','ألبوم قصص مصورة'] :
            my_description , missing = its_a_generalthing( lng , wditem , 'ألبوم قصص مصورة','ألبوم قصص مصورة من سلسلة ','P179' )
        if (my_description in ['','ألبوم قصص مصورة']):
            my_description , missing = its_a_generalthing( lng , wditem , 'ألبوم قصص مصورة','ألبوم قصص مصورة من تأليف ','P50' )
    #------'':'مكتبة جافا سكريبت',# 17241
    elif type_of_item == 'Q783866':
        if (orig_desc in ['مكتبة جافا سكريبت','']) :
            my_description , missing = its_a_generalthing( lng , wditem , 'مكتبة جافا سكريبت','مكتبة جافا سكريبت من تطوير ','P178' );
    #------
    elif type_of_item == 'Q620615': #تطبيق محمول
        if (orig_desc in ['تطبيق محمول','']) :
            my_description , missing = its_a_generalthing( lng , wditem , 'تطبيق محمول','تطبيق محمول من تطوير ','P178' );
    #------
    elif type_of_item in Space_tab:
        labr = Space_tab[type_of_item]
        if orig_desc in [labr , '']:
            my_description , missing = its_a_generalthing( lng , wditem ,  labr ,'%s في ' % labr ,'P59' )
    #------
    #elif type_of_item == 'Q72802508':
        #if orig_desc in ['emissielijn-sterrenstelsel',''] :
            #my_description , missing = its_a_generalthing( lng , wditem , 'emissielijn-sterrenstelsel','emissielijn-sterrenstelsel في مجرة','P59' )
            #------
            #------
    #------
    test = re.sub( "[abcdefghijklmnopqrstuvwxyz]" , '' , my_description.lower() )
    if test.lower() != my_description.lower():
        my_description = ''
        printe.output('test:[%s] != my_description[%s]' % (test,my_description) )
    #------
    printe.output('Make_space_desc:[%s]' % my_description )
    #------
    return my_description , missing
#======
def just_get_ar( labe ):
    lab = labe.split('@@')
    tab = []
    #------
    claimstr = ''
    #------
    for o in lab:
        test = re.sub( "[abcdefghijklmnopqrstuvwxyz@]" , '' , o.lower() )
        if test.lower() == o.lower() and o != '' :
            tab.append(o)
    #------
    if tab != []:
        claimstr = '، و'.join(tab)
        printe.output( "just_get_ar:%s." % claimstr )
    #------
    return claimstr
    #------
#======
def its_a_sports_season( lng, wditem , item = {} ):
    #------
    #LNKsport=wditem.get('claims',{}).get('P3450')[0].get('mainsnak',{}).get('datavalue',{}).get('value',{}).get('id','')#.getTarget()
    #------
    myclaim = 'P3450'
    #------
    claimstr = just_get_ar(item.get( 'lab' , '' ))
    #------
    pp = wditem.get('claims',{}).get(myclaim,[])
    if claimstr.strip() == '':
        #------
        for x in pp:
            LNKitem = x.get('mainsnak',{}).get('datavalue',{}).get('value',{}).get('id','')
            if claimstr == '' :
                claimstr = Get_label( LNKitem )
    #------
    claimstr = claimstr.strip()
    #------
    shortstr = 'موسم رياضي'
    #------
    if pp == [] :
        printe.output( "its_a_sports_season item has no %s claims.." % myclaim )
    #------
    if claimstr == '':
        return shortstr , ''
    #------
    laste = 'موسم من %s' % claimstr
    #------
    printe.output( "its_a_sports_season:(%s)" % laste )
    #------
    return laste ,' '
#======
def its_songs( type_of_item , wditem , shortstr , item = {} ):
    #my_description , missing = its_a_generalthing( lng , wditem , da , '%s من أداء ' % da ,'P175' )
    myclaim = 'P175'
    #------
    # songs_type
    #------
    claimstr = just_get_ar(item.get( 'lab' , '' ))
    P175 = wditem.get('claims',{}).get(myclaim,[])
    #------
    if claimstr == '':
        #------
        for x in P175:
            LNKitem = x.get('mainsnak',{}).get('datavalue',{}).get('value',{}).get('id','')
            if claimstr == '' :
                claimstr = Get_label( LNKitem )
    #------
    claimstr = claimstr.strip()
    #------
    if P175 == [] :
        printe.output( "its_songs item has no P175 claims.." )
    #------
    if claimstr == '':
        sooo = [
            'Q1573906' , # 'جولة موسيقية'
            'Q182832' ,# 'حفلة موسيقية'
            ]
        if type_of_item in sooo :
            directorname = ''
            LNKdirector = wditem.get('claims',{}).get('P57' , [])
            #------
            if directorname == '':
                #------
                for x in LNKdirector:
                    LNKitem = x.get('mainsnak',{}).get('datavalue',{}).get('value',{}).get('id','')
                    if directorname == '' :
                        directorname = Get_label( LNKitem )
            #------
            if directorname != '' :
                return '%s من إخراج %s' % ( shortstr , directorname ) , ''
            #------
        else:
            return shortstr , ''
    #------
    laste = shortstr
    if claimstr != '':
        laste = '%s من أداء %s' % ( shortstr.strip() , claimstr )
        if len(P175) > 1 :
            laste = '%s من أداء %s وآخرون' % ( shortstr.strip() , claimstr )
    #------
    printe.output( "its_songs:(%s)" % laste )
    #------
    return laste ,' '
#======
def its_a_p50( type_of_item , wditem , shortstr , item = {} ):
    myclaim = 'P50'
    #------
    claimstr = just_get_ar(item.get( 'lab' , '' ))
    #------
    #printe.output( "item:(%s)" % str(item) )
    #printe.output( z )
    #------
    noval = False
    P136 = wditem.get('claims',{}).get('P136',[{}])[0].get('mainsnak',{}).get('datavalue',{}).get('value',{}).get('id','')
    if P136 == 'Q8261' and shortstr == 'عمل أدبي' :
        shortstr = 'رواية'
        noval = True
    #------
    P50 = wditem.get('claims',{}).get(myclaim,[])
    #------
    if claimstr == '':
        #------
        for x in P50:
            LNKitem = x.get('mainsnak',{}).get('datavalue',{}).get('value',{}).get('id','')
            if claimstr == '' :
                claimstr = Get_label( LNKitem )
    #------
    claimstr = claimstr.strip()
    if claimstr == '': return shortstr , ''
    #------
    jjj = [
        "كتاب",
        "عمل أدبي",
        "رواية",
        "كتاب هزلي",
        "قصة",
        "قصة قصيرة",
        ]
    #------
    sus = 'بواسطة'
    #------
    if shortstr.strip() in jjj : 
        sus = 'من تأليف'
    elif shortstr.strip().find("مقالة") != -1 : 
        sus = 'كتبها'
    #------
    laste = '%s %s %s' % ( shortstr.strip() , sus ,  claimstr )
    if len(P50) > 1 : laste = '%s %s %s وآخرون' % ( shortstr.strip() , sus , claimstr )
    #------
    #laste = laste.replace("كوكبة  ","كوكبة ")
    #------
    printe.output( "its_a_p50:(%s)" % laste )
    return laste ,' '
#======
#======
def its_a_thing_located_in_country( lng, wditem , countryname, thing ):
    if lng in wditem.get('descriptions',{}):
        return wditem.get('descriptions',{})[lng] , txt2skip
    if gelegen_inCLAIM in wditem.get('claims',{}) :
        LNKcommunity = wditem.get('claims',{}).get(gelegen_inCLAIM)[0].get('mainsnak',{}).get('datavalue',{}).get('value',{}).get('id','')#.getTarget()
        label = Get_label( LNKcommunity )
        if label != '' :
            return thing + ' في ' + label + '، ' + countryname , ''
        else:
            return thing + ' في ' + countryname , ''
    return thing + ' في ' + countryname , ''
#======
def its_a_film( lng, wditem ):
    directorname = ''
    #if 'P57' in wditem.get('claims',{}):
    LNKdirector = wditem.get('claims',{}).get('P57' , [])
    #------
    if directorname == '':
        #------
        for x in LNKdirector:
            LNKitem = x.get('mainsnak',{}).get('datavalue',{}).get('value',{}).get('id','')
            if directorname == '' :
                directorname = Get_label( LNKitem )
    #------
    if directorname != '' :
        return 'فيلم من إخراج %s' % directorname , ''
    #------
    return 'فيلم' , ''
#======
from des.railway import railway_tables, work_railway
#======
def Make_railway_desc( wditem, p31 ):
    #------
    work_railway(wditem, p31)
    #------
#======
def Make_others_desc( lng, wditem, type_of_item, orig_desc, item = {} ):
    my_description, missing = '', ''
    #------
    #printe.output( "Make others desc:P31:%s" % type_of_item )
    #------
    if type_of_item == 'Q13417250': #a
        if orig_desc in ['']:
            my_description = 'مقاطعة في أذربيجان'
            #my_description , missing = its_something_in_a_country(lng, wditem , 'جبل',True)
    #------
    elif type_of_item in bldiat :
        #my_description , missing = its_something_in_a_country(lng, wditem , 'بلدية' , True )
        my_description , missing = its_a_thing_located_in_country( lng, wditem , bldiat[type_of_item] ,'بلدية')
        if my_description in ['بلدية' , ''] :
            my_description = 'بلدية في %s' % bldiat[type_of_item]
    #------
    elif type_of_item == 'Q79007':
        if orig_desc in ['شارع',''] :
            my_description, missing = its_something_in_an_entity( lng , wditem , 'شارع في')
    #------
    elif type_of_item == 'Q484170': #بلدية في فرنسا
        #my_description , missing = its_a_thing_located_in_country( lng, wditem , 'فرنسا','بلدية')
        #my_description = 'بلدية في فرنسا'
        my_description , missing = its_something_in_a_country(lng, wditem , 'بلدية' , True )
    #------
    elif (type_of_item == 'Q262166') or (type_of_item == 'Q22865' ): #بلدية في ألمانيا
        #my_description , missing = its_a_thing_located_in_country( lng, wditem , 'ألمانيا','بلدية')
        #my_description = 'بلدية في ألمانيا'
        my_description , missing = its_something_in_a_country(lng, wditem , 'بلدية' , True )
    #------
    elif type_of_item == 'Q747074': #Italian communiity
        #my_description , missing = its_a_thing_located_in_country( lng, wditem , 'إيطاليا','بلدية')
        my_description , missing = its_something_in_a_country(lng, wditem , 'بلدية' , True )
        #my_description = 'بلدية في إيطاليا'
    #------
    #------
    # أغاني وألبومات صوتية وما شابهه
    elif type_of_item in songs_type :
        da  = songs_type[type_of_item]
        if orig_desc in [da,'']:
            #my_description , missing = its_a_generalthing( lng , wditem , da , '%s من أداء ' % da ,'P175' )
            my_description , missing = its_songs( type_of_item , wditem , da , item = item )
    #------
    #------
    #------
    elif type_of_item in Geo_entity:
        labr = Geo_entity[type_of_item]
        if orig_desc in [labr , '']:
            my_description , missing = its_something_in_an_entity( lng , wditem , '%s في' % labr )
            #if my_description == '':
                #my_description = labr
                #missing = ''
    #------
    elif type_of_item == 'Q8502': #a جبل
        if orig_desc in ['جبل','']:
            my_description , missing = its_something_in_an_entity( lng , wditem , 'جبل في' )
            #my_description , missing = its_something_in_a_country(lng, wditem , 'جبل',True)
    #------
    elif type_of_item == 'Q5398426': #tv_series
        my_description , missing = its_something_in_a_country(lng, wditem , 'مسلسل تلفزيوني',True)
        #my_description , missing = its_a_tvseries( lng, wditem )
    #------
    elif type_of_item == 'Q45382':
        if orig_desc in ['انقلاب' , '']:
            #my_description , missing = its_something_in_an_entity( lng , wditem , '%s في' % labr )
            my_description , missing = its_something_in_a_country(lng, wditem , 'انقلاب',True)
            #if my_description == '':
                #my_description = labr
                #missing = ''
    #------
    elif type_of_item == 'Q43229': #organisation
        if orig_desc in ['منظمة',''] :
            my_description , missing = its_something_in_a_country(lng, wditem , 'منظمة',False)
    #------
    elif type_of_item == 'Q46970': #شركة طيران uit P17
        if orig_desc in ['شركة طيران',''] :
            my_description , missing = its_something_in_a_country(lng, wditem , 'شركة طيران',False)
    #------
    elif ((type_of_item == 'Q783794') or (type_of_item == 'Q4830453')):
        my_description , missing = its_something_in_a_country(lng, wditem , 'شركة' , True)
    #------
    elif type_of_item in others_list:
        labr = others_list[type_of_item]['ar']
        if orig_desc in [labr , '']:
            #my_description , missing = its_something_in_an_entity( lng , wditem , '%s في' % labr )
            my_description , missing = its_something_in_a_country(lng, wditem , labr,True)
            if type_of_item in qura and my_description in [ qura[type_of_item]['P31'] , ''] :
                my_description = '%s في %s' % ( qura[type_of_item]['P31'] , qura[type_of_item]['P17'] )
                #my_description = labr
                #missing = ''
    #------
    elif type_of_item == 'Q532':  #dorp in P17
        if orig_desc in ['قرية','']:
            my_description , missing = its_something_in_a_country(lng, wditem , 'قرية',False)
  #------
    elif type_of_item == 'Q4022':
        if orig_desc in ['نهر','']:
            my_description , missing = its_something_in_a_country(lng, wditem , 'نهر',True)
    #------
    elif type_of_item == 'Q1983062': #aflevering/episode
        my_description , missing = its_an_episode( lng, wditem )
    #------
    elif type_of_item == 'Q21191270': #حلقة مسلسل تلفزيوني
        my_description , missing = its_an_episode( lng, wditem )
    #------
    elif type_of_item == 'Q15416':   #برنامج تلفزيوني
        if orig_desc in ['برنامج تلفزيوني',''] :
            #my_description , missing = its_something_in_a_country(lng, wditem , 'برنامج تلفزيوني',True)
            my_description , missing = its_something_in_a_country(lng, wditem , 'برنامج تلفزيوني',True)
    #------
    elif type_of_item == 'Q11424': #film uit P495 (P577)
        if orig_desc in ['','فيلم'] :
            my_description , missing = its_a_film( lng, wditem )
    #------
    #------
    #------
    #------
    test = re.sub( "[abcdefghijklmnopqrstuvwxyz]" , '' , my_description.lower() )
    if test.lower() != my_description.lower():
        my_description = ''
        printe.output('test:[%s] != my_description[%s]' % (test,my_description) )
    #------
    #printe.output('Make others desc:[%s]' % my_description )
    #------
    return my_description , missing
#======
def action_one_item( lngr, q, item = {} ):
    global output2screen
    global items2do
    global totaledits
    wditem = himoBOT2.Get_Item_API_From_Qid( q , sites = '' , titles = '', props = '' )
    #q = wditem['q']
    #printe.output( "------------------------"  )
    #printe.output( "action_one_item:q:%s" % q )
    if (debugedo): printe.output('action-one-item1')
    items_written=items_found=0
    missing = ''
    lng = 'ar'
    my_description  = ''
    orig_desc = get_lng_description( lng,wditem).lower()
    #------
    item_tab = item
    #------
    if 'org' in sys.argv :
        orig_desc = ''
    #------
    en_description = ''
    en_description = get_lng_description('en',wditem)
    printe.output( "orig_desc:%s,en_description:%s" % (orig_desc,en_description) )
    type_of_item=''
    placefound=''
    claims = wditem['claims']
    items2do -= 1
    #str1 = '{:>10d}'.format(items2do)
    #str2 = '{:>10}'.format(q)
    #if commit:
      #sys.stdout.write("\r%s%s" % (str1, str2))
    gotP31 = False
    if is_eenCLAIM in claims:
      #------
      #type_id = claims.get( is_eenCLAIM )[0]#.getTarget()
      type_ids = claims.get( is_eenCLAIM )
      #------
      for type_id in type_ids:
        #------
        gotP31 = True
        #if type_id != None:
        type_of_item = type_id.get('mainsnak',{}).get('datavalue',{}).get('value',{}).get('id','')  #we only use the first one, and assume the first one is most relevant
        #------
        if type_of_item in railway_tables:
            Make_railway_desc( wditem, type_of_item )
            return items_found,items_written
        #------
        if type_of_item != '' :
          printe.output('Type: [%s]' % type_of_item )
          #printe.output( type_of_item )
          #------
          #if (False):
            #pass #just to have the same structure below
          #------
          if False:
            pass #just to have the same structure below
          #------
          elif type_of_item == 'Q7604686':
            my_description = "صك قانوني في المملكة المتحدة"
          #------
          elif type_of_item == 'Q7604693':
            my_description = "قواعد قانونية في أيرلندا الشمالية"
          #------
          elif type_of_item == 'Q3231690': #automodel van P176
            if orig_desc in ['طراز سيارة',''] :
              my_description , missing = its_a_generalthing( lng , wditem , 'طراز سيارة','طراز سيارة من إنتاج','P176', item = item )
              #------
              '''
              elif type_of_item == 'Q3331189':
                if orig_desc in ['طبعة',''] :
                  my_description , missing = its_a_generalthing( lng , wditem , 'طبعة', '' , 'P629' )
                  if my_description == 'طبعة' :
                    my_description  = ''
              '''
          #------
          elif type_of_item == 'Q27020041':#موسم رياضي
            if orig_desc in ['موسم رياضي',''] :
              my_description , missing = its_a_sports_season( lng, wditem , item = item )
          #------
          elif type_of_item == 'Q571': #boek van P50
            if orig_desc in ['','كتاب'] :
              my_description , missing = its_a_generalthing( lng , wditem , 'كتاب','كتاب من تأليف','P50')
          #------
          elif type_of_item == 'Q3863': #كويكب
            if orig_desc in [''] :
              my_description = 'كويكب'
          #------
          elif type_of_item == 'Q7889':  #computerspel  genre=P136   ontwikkelaar=P178  uitgeverij=P123
            if orig_desc in ['لعبة فيديو','']:
              my_description , missing = its_a_computergame( lng, wditem )
          #------
          #------
          #------
          #------
          #------
          elif type_of_item in space_list_and_other :
            #printe.output( 'type_of_item in space_list_and_other' )
            my_description , missing = Make_space_desc( lng , wditem , type_of_item , orig_desc, item = item )
          #------
          elif type_of_item in others_list or type_of_item in others_list_2:
            #printe.output( 'type_of_item in others_list' )
            my_description , missing = Make_others_desc( lng , wditem , type_of_item , orig_desc, item = item )
          #------
          elif type_of_item == 'سلالة كلب': #hondenras
            if orig_desc in ['سلالة',''] :
              my_description='سلالة كلب'
          #------
          elif type_of_item == 'Q34770': #لغة
            if orig_desc in ['لغة',''] :
              my_description='لغة'
          #------
          elif type_of_item == 'Q215380': #muziekband
            if orig_desc in ['طاقم موسيقي',''] :
              my_description , missing = its_something_in_a_country(lng, wditem ,'طاقم موسيقي',True)
          #------
          elif type_of_item == 'Q184188': #كانتون فرنسي
            my_description , missing = its_canton_of_France( lng , wditem )
          #------
          elif type_of_item in Qid_Descraptions :
            my_description = Qid_Descraptions[type_of_item].get('ar','')
          #------
          elif type_of_item == 'Q7930614':
            if orig_desc in [ 'قرية' , '' , 'قرية في تايوان' ] :
              my_description , missing = its_something_in_an_entity( lng , wditem , 'قرية في')
              if my_description in [ '' ]:
                my_description = 'قرية في تايوان'
                missing=''
          #------
          elif type_of_item == 'Q56436498 xxx':
            if orig_desc in [ 'قرية' , '' , 'قرية في الهند' ] :
              my_description , missing = its_something_in_an_entity( lng , wditem , 'قرية في')
              if (my_description in ['',' ']):
                my_description='قرية في الهند'
                missing=''
          #------
          #------
          #------
          #------
        #------
        if type_of_item == 'xdf' :
          #------
          #------
          #------
              #my_description , missing = its_a_band( lng, wditem )
          #------
          if type_of_item == 'Q11173':#chemische verbinding
            if orig_desc in ['chemische stof','chemische samenstelling',''] :
              my_description = 'chemische verbinding'
            placefound = 'chemische samenstelling'
          #------
          elif type_of_item == 'Q79529':
            if orig_desc in ['chemische samenstelling','chemische verbinding'] :         #was blank, it should be, but better double check
              my_description='chemische stof' #then use default description
          #------
          elif type_of_item == 'Q21014462': #cel lijn
            if (orig_desc in ['cellijn','']) :
              my_description , missing = its_a_generalthing( lng , wditem , 'cellijn','cellijn van een ','P703' )
          #------
          elif type_of_item == 'Q4167410': #disambiguation-page
            if orig_desc in ['','dp','doorverwijzing','doorverwijspagina'] :
              my_description , missing = its_disambigue( lng , wditem )
          #------
          elif type_of_item == 'Q16521': #it is a taxon
            if orig_desc in ['',''] : #old one is blank
              my_description , missing = its_a_taxon( lng, wditem ) #fix it to 'taxon'
          #------
          elif type_of_item == 'Q577': #jaar
            my_description='jaar'
          elif (type_of_item == 'Q515') or (type_of_item == 'Q5119') or (type_of_item == 'Q1549591') or (type_of_item == 'Q3957'):  #stad
            my_description , missing = its_something_in_a_country(lng, wditem , 'stad',True)
          #------
          #elif type_of_item == 'Q13406463': #wikimedia-lijst
            #my_description , missing = its_a_list( lng, wditem )
          #------
          elif type_of_item == 'Q11266439':
            if orig_desc in ['','template','sjabloon'] :
              my_description='Wikimedia-sjabloon'
          #------
          elif type_of_item == 'Q310890':  #monotypiscal taxon
            if orig_desc in ['taxon',''] :
              my_description = 'monotypische taxon'
          #------
          elif type_of_item == 'Q877358': #resolution of the UN
            if orig_desc in ['resolutie',''] :
              my_description='resolutie van de Veiligheidsraad van de Verenigde Naties'
          #------
          elif type_of_item == 'Q486972':
            l1=orig_desc.find('stad in')
            l2=orig_desc.find('plaats in')
            if (orig_desc in ['مستوطنة','nederzetting','']) or (l1>=0) or (l2>=0):
              wditem['descriptions']['nl']=''
              my_description , missing = its_something_in_a_country(lng, wditem , 'nederzetting',False)
          elif type_of_item == 'Q18340514': #gebeurtenis in jaar
            my_description = 'مقالة عن أحداث في سنة أو فترة زمنية محددة'
          #------
          elif type_of_item == 'Q1539532':
            my_description = 'موسم نادي رياضي'
          #------
          elif type_of_item == 'Q3192808': #commune in Madagascar
            if orig_desc in ['commune',''] :
              my_description='commune in Madagascar'
          #------
          elif type_of_item == 'Q1002697': #periodiek in het genre P136
            if (orig_desc in ['periodiek','']) :
              my_description , missing = its_a_generalthing( lng , wditem , 'periodiek','periodiek over','P641')
          #------
          elif type_of_item == 'Q18536594': #sportevenement op de Olympische Spelen
            if orig_desc in ['sportevenement',''] :
              my_description = 'sportevenement op de Olympische Spelen'
          #------
          elif type_of_item == 'Q15081032': #historisch motorfietsmerk
            if orig_desc in ['motorfietsmerk',''] :
              my_description , missing = its_something_in_a_country(lng, wditem , 'motorfietsmerk',False)
          #------
          elif type_of_item == 'Q178561': #veldslag in #P17
            if orig_desc in ['veldslag',''] :
              my_description , missing = its_something_in_a_country(lng, wditem , 'veldslag',False)
          #------
          elif type_of_item == 'Q618779': #onderscheiding
            if orig_desc in ['onderscheiding',''] :
              my_description , missing='onderscheiding',''
          #------
          elif type_of_item == 'Q18127': #platenlabel uit P17
            if orig_desc in ['',''] :
              pass
          #------
          elif type_of_item == 'Q2635894':  #hoorspel uit de serie P179/uit P495
            if orig_desc in ['hoorspel',''] :
              my_description , missing = its_an_audio_drama( lng, wditem )
          #------
          elif type_of_item == 'Q197': #vliegtuig van P176
            if orig_desc in ['','vliegtuig'] :
              my_description , missing='vliegtuig',''
          #------
          #elif type_of_item == 'Q847017': #sportvereniging uit P17
            #if orig_desc in ['',''] :
              #pass
          #------
          elif type_of_item == 'Q2590631': #gemeente in Hongarije
            if orig_desc in ['',''] :
              my_description = 'gemeente in Hongarije'
          #------
          elif type_of_item == 'Q3024240': #historisch land in P30
            if orig_desc in ['',''] :
              my_description = 'historisch land'
          #------
          elif type_of_item == 'Q253019':
            if orig_desc in ['','ortsteil','plaats in duitsland'] :
              my_description, missing =its_a_thing_located_in_country( lng, wditem , 'Duitsland', 'ortsteil')
          #------
          elif type_of_item == 'Q41710': #etniciteit
            if orig_desc in ['',''] :
              my_description = 'etnische groep'
          #------
          elif type_of_item == 'Q11446':  #schip
            if orig_desc in ['',''] :
              my_description = 'schip'
          #------
          elif type_of_item == 'Q180684': #conflict
            if orig_desc in ['conflict',''] :
              its_something_in_a_country(lng, wditem , 'conflict',False)
          #------
          elif type_of_item == 'Q5153359': #cz gemeente
            if orig_desc in ['',''] :
              my_description = 'gemeente in Tsjechië'
          #------
          elif type_of_item == 'Q1131296': #portugese bestuurslaag, fregusia
            if orig_desc in ['',''] :
              my_description = 'freguesia in Portugal'
          #------
          elif type_of_item == 'Q14659': #heraldisch wapen uit P17
            if orig_desc in ['heraldisch wapen',''] :
              my_description , missing = its_something_in_a_country(lng, wditem , 'wapen',True)
          #------
          elif type_of_item == 'Q207628': #compositie van P86
            if orig_desc in ['compositie',''] :
              my_description , missing = its_a_composition( lng, wditem )
          #------
          elif type_of_item == 'Q95074':  #personage uit P1080
            if orig_desc in ['personage',''] :
              my_description , missing = its_a_fictional_character( lng, wditem );
          #------
          elif type_of_item == 'Q42032':  #ccTLD top level domain van P17
            if orig_desc in ['top level domain','toplevel domain',''] :
              pass
          elif type_of_item == 'Q2912397': #eendagswielerwedstrijd in P17
            if orig_desc in ['eendaagse wielerwedstrijd',''] :
              my_description , missing = its_something_in_a_country(lng, wditem , 'eendaagse wielerwedstrijd ',True)
          #------
          elif type_of_item == 'Q355304': #watergang
            if orig_desc in ['','watergang'] :
              my_description , missing = its_something_in_a_country(lng, wditem , 'watergang ',True)
          #------
          elif type_of_item == 'Q34763': #schiereiland
            if orig_desc in ['schiereiland',''] :
              my_description , missing = its_something_in_a_country(lng, wditem , 'schiereiland ',True)
          #------
          elif type_of_item == 'Q23442':
            if orig_desc in ['eiland',''] :
              my_description , missing = its_something_in_a_country(lng, wditem , 'eiland ',True)
          #------
          elif type_of_item == 'Q16970': #kerkgebouw
            if orig_desc in ['kerkgebouw',''] :
              my_description , missing = its_something_in_a_country(lng, wditem , 'kerkgebouw',True)
          #------
          elif type_of_item == 'Q23925393': #douar
            if orig_desc in ['douar',''] :
              my_description , missing = its_something_in_a_country(lng, wditem , 'douar',True)
          #------
          elif type_of_item == 'Q165':
            if orig_desc in ['zee',''] :
              my_description , missing = its_something_in_a_country(lng, wditem , 'zee',True)
          #------
          elif type_of_item == 'Q102496':
            if orig_desc in ['parochie',''] :
              my_description , missing = its_something_in_a_country(lng, wditem , 'parochie',True)
          #------
          elif type_of_item == 'Q3914':
            if orig_desc in ['school',''] :
              my_description , missing = its_something_in_a_country(lng, wditem , 'school',True)
          #------
          elif type_of_item == 'Q273057': #discografie
            if orig_desc in ['','discografie'] :
              my_description , missing = its_a_discography( lng, wditem )
          #------
          elif type_of_item == 'Q3966183': #Pokémonwezen
            if orig_desc in ['Pokemonwezen','Pokémon-wezen','Pokemon','Pokémon',''] :
              my_description = 'Pokémonwezen'
              missing = ''
          #------
          elif type_of_item == 'Q5633421': #wetenschappelijk tijdschrift
            if (orig_desc in ['','tijdschrift','wetenschappelijk tijdschrift']) :
              my_description , missing = its_a_generalthing( lng , wditem , 'wetenschappelijk tijdschrift','wetenschappelijk tijdschrift van ','P123' )
          #------
          elif type_of_item == 'Q101352': #achternaam
            if orig_desc in ['',''] :
              my_description='achternaam'
              missing=''
          #------
          elif type_of_item == 'Q4167836':
            if orig_desc in ['','categorie','Categorie','category'] :
              my_description='Wikimedia-categorie'
              missing=''
          #------
          elif type_of_item == 'Q13442814':
            if orig_desc in ['artikel',''] :
              my_description='wetenschappelijk artikel'
          #------
          elif type_of_item == 'Q2039348': #Nederlandse gemeente
            if orig_desc in ['gemeente','Nederlandse gemeente','gemeente in Nederland',''] :
              pass
          #------
          elif type_of_item == 'Q5864':
            if orig_desc in ['geile dwerg',''] :
              my_description = 'gele dwerg'
          #------
          elif type_of_item == 'Q50231':
            if orig_desc in ['bestuurlijk gebied','gebied',''] :
              my_description = 'bestuurlijk gebied in China'
          #------
          elif type_of_item == 'Q2526255': # filmregisseur
            if orig_desc in ['filmregisseur','','regisseur'] :
              my_description , missing = its_something_in_a_country(lng, wditem , 'filmregisseur',True)
          #------
          elif type_of_item == 'Q34442': #weg
            if orig_desc in ['weg','straat','straat in',''] :
              my_description , missing= its_something_in_a_country(lng, wditem , 'weg',True)
              placefound = 'weg'
          #------
          elif type_of_item == 'Q985488':
            if orig_desc in ['bewonersgemeenschap',''] :
              my_description , missing = its_something_in_a_country(lng, wditem , 'bewonersgemeenschap',True)
          #------
          elif type_of_item == 'Q23397':
            if orig_desc in ['meer',''] :
              my_description , missing = its_something_in_a_country(lng, wditem , 'meer',True)
          #------
          elif type_of_item == 'Q2996394':
            if orig_desc in ['x',''] :
              my_description = 'biologisch proces'
          #------
          elif type_of_item == 'Q14860489':
            if orig_desc in ['y',''] :
              my_description = 'moleculaire functie'
          #------
          elif type_of_item == 'Q5058355':
            if orig_desc in ['z',''] :
              my_description = 'cellulaire component'
          #------
          elif type_of_item == 'Q1077097':
            if orig_desc in ['tambon',''] :
              its_a_tabon_in_thailand( lng, wditem )
          #------
          elif type_of_item == 'Q4592255':
            if orig_desc in ['',''] :
              my_description = 'project sub-pagina'
          #------
          elif type_of_item == 'Q21278897':
            if orig_desc in ['',''] :
              my_description = 'Wiktionary-doorverwijzing'
          #------
          elif type_of_item == 'Q1004':
            if (orig_desc in ['stripverhaal','']) :
              my_description , missing = its_a_generalthing( lng , wditem , 'stripverhaal','stripverhaal من سلسلة ','P179' )
          #------
          elif type_of_item == 'Q14406742':
            if (orig_desc in ['stripreeks','']) :
              my_description , missing = its_a_generalthing( lng , wditem , 'stripreeks','stripreeks door ','P50' )
          #------
          elif type_of_item == 'Q737498': #academisch tijdschrift
            if orig_desc in ['tijdschrift',''] :
              my_description='academisch tijdschrift'
          #------
          elif type_of_item == 'Q24764':
            if orig_desc in ['gemeente',''] :
              my_description='Filipijnse gemeente'
          #------
          elif type_of_item == 'Q70208':
            if orig_desc in ['gemeente',''] :
              my_description='Zwitserse gemeente'
          #------
          elif type_of_item == 'Q127448':
            if orig_desc in ['gemeente','zweedse gemeente'] :
              my_description , missing = its_something_in_an_entity( lng , wditem , 'Zweedse gemeente in')
          #------
          elif type_of_item == 'Q203300':
            if orig_desc in ['gemeente',''] :
              my_description='gemeente in Liechtenstein'
          #------
          elif type_of_item == 'Q50386450': #opera-personage
            if (orig_desc in ['opera-personage','']) :
              my_description , missing = its_a_generalthing( lng , wditem , 'opera-personage','opera-personage uit ','P1441' )
          #------
          elif type_of_item == 'Q178122':
            if (orig_desc in ['aria','']) :
              my_description , missing = its_a_generalthing( lng , wditem , 'aria','aria van ','P86' )
          #------
          elif type_of_item == 'Q1344':
            if (orig_desc in ['opera','']) :
              my_description , missing = its_a_generalthing( lng , wditem , 'opera','opera van ','P86' )
          #------
          elif type_of_item == 'Q53764738':
            if orig_desc in ['',''] :
              my_description = 'Chinees karakter'
          #------
          elif type_of_item == 'Q166735': #broekbos
            if orig_desc in ['broekbos',''] :
              my_description , missing = its_something_in_an_entity( lng , wditem , 'broekbos in')
          #------
          elif type_of_item == 'Q7075':
            if orig_desc in ['bibliotheek',''] :
              my_description , missing = its_something_in_an_entity( lng , wditem , 'bibliotheek in')
          #------
          elif type_of_item == 'Q5084':  #gehucht
            if orig_desc in ['gehucht',''] :
              my_description , missing = its_something_in_an_entity( lng , wditem , 'gehucht in')
          #------
          elif type_of_item == 'Q735428':
            if orig_desc in ['gemeente',''] :
              my_description , missing = its_something_in_an_entity( lng , wditem , 'gemeente in')
              #print('[%s][%s]'%(my_description , missing))
          #------
          elif type_of_item == 'Q9842':
            if orig_desc in ['basisschool','basisschool in italië',''] :
              my_description , missing = its_something_in_an_entity( lng , wditem , 'basisschool in ')
          #------
          elif type_of_item == 'Q659103':  #gemeente in P131, Roemenië
            if orig_desc in ['gemeente in Roemenie','gemeente in Roemenië','gemeente',''] :
              my_description , missing = its_something_in_an_entity( lng , wditem , 'gemeente in')
          #------
          elif type_of_item == 'Q106259': #polder in P131, P17
            if orig_desc in ['polder',''] :
              my_description, missing = its_something_in_an_entity( lng , wditem , 'polder in')
          #------
          elif type_of_item == 'Q3184121': #gemeente in Brazilië
            if orig_desc in ['gemeente','gemeente in brazilie','gemeente in brazilië',''] :
              my_description , missing = its_something_in_an_entity( lng , wditem , 'gemeente in')
          #------
          elif type_of_item == 'Q106658':  #Landkreis in P131
            if orig_desc in ['landkreis',''] :
              my_description , missing = its_something_in_an_entity( lng , wditem , 'Landkreis in')
          elif type_of_item == 'Q15991303':
            if orig_desc in ['voetbalcompetitie',''] :
              my_description, missing=its_something_in_a_country(lng, wditem , 'voetbalcompetitie',True)
          #------
          elif type_of_item == 'Q742421':
            if orig_desc in ['','theatergezelschap'] :
              my_description , missing = its_something_in_a_country(lng, wditem , 'theatergezelschap',True)
          #------
          elif type_of_item == 'Q30198':
            if (orig_desc in ['','uitstekend landdeel','meers','moeras']) or (orig_desc[:19] == 'uitstekend landdeel'):
              my_description , missing = its_something_in_an_entity( lng , wditem , 'moeras in')
          #------
          elif type_of_item == 'Q2042028':
            if orig_desc in ['kloof',''] :
              my_description , missing = its_something_in_an_entity( lng , wditem , 'kloof in')
          #------
          elif type_of_item == 'Q953806':
            if orig_desc in ['bushalte',''] :
              my_description , missing = its_something_in_an_entity( lng , wditem , 'bushalte in')
          #------
          elif type_of_item == 'Q751876':
            if orig_desc in ['kasteel',''] :
              my_description , missing = its_something_in_an_entity( lng , wditem , 'kasteel in')
          #------
          elif type_of_item == 'Q4502142':
            if orig_desc in ['visueel kunstwerk',''] :
              my_description , missing = its_a_generalthing( lng , wditem , 'visueel kunstwerk','visueel kunstwerk in collectie ','P195' )
          #------
          elif type_of_item == 'Q732577':
            if orig_desc in ['publicatie',''] :
              my_description , missing = its_a_publication( lng, wditem )
          #------
          elif type_of_item == 'Q55659167':
            if orig_desc in ['','natuurlijke waterloop'] :
              my_description , missing = its_something_in_a_country(lng, wditem , 'natuurlijke waterloop',NoCheckFilled)
          #------
          elif type_of_item == 'Q41176':
            if orig_desc in ['gebouw','bouwwerk',''] :
              my_description , missing = its_something_in_an_entity( lng , wditem , 'gebouw in')
          #------
          elif type_of_item == 'Q5783996':
            if orig_desc in ['cottage',''] :
              my_description , missing = its_something_in_an_entity( lng , wditem , 'cottage in')
          #------
          elif type_of_item == 'Q3947':
            if orig_desc in ['woonhuis',''] :
              my_description , missing = its_something_in_an_entity( lng , wditem , 'woonhuis in')
          #------
          elif type_of_item == 'Q13141064':
            if orig_desc in ['','badmintonner','badmintonspeler',''] :
              my_description , missing = its_something_in_a_country(lng, wditem , 'badmintonspeler',)
          #------
          elif type_of_item == 'Q26703203':
            if orig_desc in ['stolperstein',''] :
              my_description , missing = its_something_in_an_entity( lng , wditem , 'stolperstein in')
          #------
          elif type_of_item == 'Q30612':
            if orig_desc in ['klinisch onderzoek',''] :
              my_description='klinisch onderzoek'
          #------
          elif type_of_item == 'Q811979':
            if orig_desc in ['bouwwerk',''] :
              my_description , missing = its_something_in_an_entity( lng , wditem , 'bouwwerk in')
          #------
          elif type_of_item == 'Q126807':
            if orig_desc in ['kleuterschool','school',''] :
              my_description , missing = its_something_in_an_entity( lng , wditem , 'kleuterschool in')
          #------
          elif type_of_item == 'Q14660':
            if orig_desc in ['vlag',''] :
              pass
              my_description , missing = its_a_generalthing( lng , wditem , 'vlag','vlag van jurisdictie ','P1001' )
          #------
          elif type_of_item == 'Q6451276':
            if orig_desc in ['CSR-rapport',''] :
              my_description , missing = its_a_generalthing( lng , wditem , 'CSR-rapport','CSR-rapport over ','P921' )
          #------
          elif type_of_item == 'Q2668072':
            if orig_desc in ['',''] :
              my_description , missing = its_a_generalthing( lng , wditem , 'collectie','collectie uit ','P195' )
          #------
          elif type_of_item == 'Q17633526':
            if orig_desc in ['',''] :
              my_description='Wikinews-artikel'
              missing=''
          #------
          elif type_of_item == 'Q57733494':
            if orig_desc in ['','badmintoernooi'] :
              my_description , missing = its_something_in_a_country(lng, wditem , 'badmintontoernooi',False)
          #------
          elif type_of_item == 'Q2065704': #tingrett
            if orig_desc in ['','kantongerecht','kantongerecht in noorwegen'] :
              my_description , missing = its_something_in_a_country(lng, wditem , 'kantongerecht',NoCheckFilled)
          #------
          elif type_of_item == 'Q1149652':
            if orig_desc in ['','district'] :
              my_description='district in India'
          #------
          elif type_of_item == 'Q13005188':
            if orig_desc in ['','mandal','mandal in India'] :
              my_description , missing = its_something_in_an_entity( lng , wditem , 'mandal in')
             #------
          #------
          elif type_of_item == 'Q2154519':
            if orig_desc in ['',''] :
              my_description='bron van astrofysische röntgenstraling'
          #------
          elif type_of_item == 'Q67206701':
            if orig_desc in ['',''] :
              my_description='ver-liggend infrarood object'
          #------
          elif type_of_item == 'Q11812394':
            if orig_desc in ['','theaterbedrijf'] :
              my_description , missing = its_something_in_a_country(lng, wditem , 'theaterbedrijf',CheckFilled)
          #------
          elif type_of_item == 'Q189004':
            if orig_desc in ['',''] :
              my_description='onderwijsinstelling'
          #------
          elif type_of_item == 'Q88965416':
            if orig_desc in ['',''] :
              my_description , missing = its_something_in_an_entity( lng , wditem , 'Zweedse schooleenheid in')
          #------
          elif type_of_item == 'Q1690211':
            if orig_desc in ['',''] :
              my_description , missing = its_something_in_an_entity( lng , wditem , 'openbare wasplaats in')
          #------
          elif type_of_item == 'Q5358913':
            if orig_desc in ['',''] :
              my_description , missing = its_something_in_an_entity( lng , wditem , 'Japanse basisschool in')
          #------
          elif type_of_item == 'Q3508250':
            if orig_desc in ['',''] :
              my_description , missing = its_a_headquarted_thing( lng, wditem , 'syndicat intercommunal in')
          #------
          elif type_of_item == 'Q':
            if orig_desc in ['',''] :
              pass
          #------
          elif type_of_item == 'Q':
            if orig_desc in ['',''] :
              pass
          #------
          elif type_of_item == 'Q':
            if orig_desc in ['',''] :
              pass
          #------
          elif type_of_item == 'Q':
            if orig_desc in ['',''] :
              pass
          #------
          elif type_of_item == 'Q':
            if orig_desc in ['',''] :
              pass
          #------
          elif type_of_item == 'Q':
            if orig_desc in ['',''] :
              pass
          #------
          elif type_of_item == 'Q':
            if orig_desc in ['',''] :
              pass
          #------
          elif type_of_item == 'Q':
            if orig_desc in ['',''] :
              pass
          #------
          elif type_of_item == 'Q':
            if orig_desc in ['',''] :
              pass
        #------
        if my_description == '':
            placefound='unknown: %s' %type_of_item
            if (not commit):
              printe.output('type of item: %s, orig_desc: [%s], new: [%s]' % (type_of_item,orig_desc,my_description))
        #------
        #printe.output( '<<lightyellow>> my_description:%s' % my_description )
        #------
        if my_description.find('n/a') != -1 :
            my_description = ''
        #------
        Done = False
        #------
        if ( my_description != '' and missing != txt2skip ) or not lng in wditem['labels'] :
            newlabel = ''
            #try :
            #if lng :
            data = {}
            if not ( lng in wditem['labels']):
                if (type_of_item in update_label_allowed):
                  if ( lng in wditem['labels']):  #use link-name of same lng as label
                    newlabel=wditem['labels'][lng]
                    #data.update({'labels': { lng: newlabel }})
                    data.update({'labels':{lng:  {'language' : lng ,'value' : newlabel } } } )
                  else:
                    if lng != 'ar' :
                        for trylng in lng_canbeused:
                          if trylng in wditem['labels']: #same lng is not there, use en-wiki instead
                            mylabel = wditem['labels'][trylng]
                            if (',' in mylabel):
                              pass #don't use this label, there are unacceptable characters in the label
                            elif ('(' in mylabel):
                              mylabel = mylabel[0:mylabel.index('(')]
                            #data.update({'labels': { lng: mylabel }})
                            data.update({'labels': { lng : {'language' : lng ,'value' : mylabel } } })
                            newlabel=mylabel #to put in logfile
                            break  #found, leave for-loop
            #------
            if my_description != orig_desc :
                  #------
                  my_description = my_description.replace("  " , " ").replace("  " , " ")
                  #------
                  if my_description == "جين في إنسان عاقل":
                    my_description = "جين من أنواع جينات الإنسان العاقل"
                  #------
                  my_description = my_description.replace("  " , " ").replace("  " , " ")
                  #------
                  if (my_description != '') and (missing!=txt2skip):
                    #data.update( {'descriptions': {lng:my_description}} )
                    data.update( {'descriptions': { lng: {'language' : lng ,'value' : my_description } } } )
                  my_description = my_description.replace("  " , " ").replace("  " , " ")
                  #------
                  my_description = my_description.replace("  " , " ").replace("  " , " ")
                  #------
                  if data != {}:
                      items_written += 1
                      #------
                      #print('editEntity %d:%s.' % (len(data),data))
                      #wditem.editEntity(data,summary=f'nl-description, [[User:Edoderoobot/Set-nl-description|python code]] - {placefound}')
                      valuee = data['descriptions'][lng]['value']
                      valuee = valuee.replace( ',' , '،' )
                      #printe.output('valuee:[%s]' % valuee )
                      test = re.sub( "[abcdefghijklmnopqrstuvwxyz]" , '' , valuee.lower() )
                      if test.lower() == valuee.lower():
                          Add_desc( q , valuee , data['descriptions'][lng]['language'] )
                          Done = True
                      else:
                           printe.output('test:[%s] != value[%s]' % (test,valuee) )
                      #wditem.editEntity(data,summary=f'nl-description, [[User:Edoderoobot/Set-nl-description|python code]] - {placefound}')
                      #------
                      totaledits+=1
                      #print('Written %d-%s' % (len(data),data))
                      #------
                  #------
            #else:
                #printe.output( 'my_description == orig_desc (%s)' % my_description )
            '''
            except ValueError:
              print( "ValueError occured on %s",q)
            except :
              print( "Undefined error occured on %s-[%s]",q,missing)
              pass
            else :
              pass #print("Else:")
            '''
            items_found += 1
        #------
        else:
            if missing == txt2skip :
                printe.output( 'missing == txt2skip (%s)' % txt2skip )
        #------
        if Done :
            break
        #------
    #------
    return items_found,items_written
#======
def lastXnewpages(maxp):
  printe.output('Begonnen')
  site=pywikibot.Site(run_lng)
  mygenerator=pg.NewpagesPageGenerator(site,0,maxp)
  for onepage in mygenerator:
    if (onepage.exists()): #avoid speedy deleted
      #print('p:%s' % onepage.title())
      if ('wikibase_item' in onepage.properties()):
       try:
        wd=onepage.data_item()
        yield(wd)
       except:
        pass
  printe.output('Klaar')
def testrun():
 global output2screen
 output2screen = True
 repo = pywikibot.Site().data_repository()
 item2get = 'Q92924911'
 x = pywikibot.ItemPage(repo, item2get)
 printe.output('read item')
 if x.exists():
   printe.output('item does exist')
   found,written = action_one_item('nl', x)
   #print('[%s][%s]' % (x.get('descriptions',{})['nl'],''))
 else:
   printe.output('no action!')
def wd_one_without_description(item):
  base_sparql = 'SELECT ?item WHERE {?item wdt:P31 wd:%s . OPTIONAL {?item schema:description ?itemdescription filter (lang(?itemdescription) = \"nl\").  } FILTER (!BOUND(?itemdescription))}'
  one_sparql = base_sparql % item
  for wditem in wd_sparql_query(one_sparql):
    if (wditem.exists()):
      yield wditem
def wd_all_without_description():
  base_sparql = 'SELECT ?item WHERE {?item wdt:P31 wd:%s . OPTIONAL {?item schema:description ?itemdescription filter (lang(?itemdescription) = \"nl\").  } FILTER (!BOUND(?itemdescription))}'
  for item in all_types_list:
    wd_one_without_description(item)
    '''
    one_sparql = base_sparql % item
    for wditem in wd_sparql_query(one_sparql):
      if (wditem.exists()):
        yield wditem
    '''
def wd_all_simple_P131():
  for onesimpleitem in simple_set_byP131:
    query = 'select ?item where {?item wdt:P31 wd:%s}' % onesimpleitem
    printe.output('\n\nQuery: %s\n\n' % query)
    for oneitem in wd_sparql_query(query):
      try:
        if oneitem.exists():
          yield oneitem
          #action_one_P131_item()
        else:
          printe.output('Else wd-simple: %s' % oneitem.title())
          pass
      except:
        pass
  yield 'Q5'
def wd_all_countries(spq):
  country_query = 'select ?item where {?item wdt:P31 wd:Q6256}'
  country_generator = wd_sparql_query(country_query)
  for wd_country in country_generator:
    spq_with_country = spq % wd_country
    one_country_generator = wd_sparql_query(spq_with_country)
    for item in one_country_generator:
        if (item.exists()):
          yield item
#------
def wd_sparql_query( spq , ddf = False ):
    #------
    New_List = []
    #------
    qua = spq
    #------
    if qua == '':
        return New_List
    #------
    #if limit[1] != 0 :
        #spq = spq + " limit " + str( limit[1] )
    #------
    #wikidatasite=pywikibot.Site('wikidata','wikidata')
    #generator=pg.WikidataSPARQLPageGenerator(spq,site=wikidatasite)
    #------
    Keep = True
    offset = 0
    #------
    if Off[1] != 0 :
        offset = Off[1]
    #------
    printe.output( 'qua "%s"' % qua )
    #------
    while Keep:
        #------
        quarry = qua
        #------
        #if ddf:
        if limit[1] != 0 :
            quarry = quarry + "\n limit " + str( limit[1] )
        if offset != 0 :
            quarry = quarry + " offset " + str( offset )
        #else: Off[1] != 0 :
            #quarry = quarry + " offset " + str( Off[1] )
        #------
        #printe.output( quarry )
        #------
        printe.output( 'limit[1]:"%d"\t offset:"%d"' % (limit[1] , offset ) )
        #------
        generator = himoBOT.sparql_generator_url( quarry , printquary = False , geterror = True )
        #------
        for x in generator:
            New_List.append( x )
        #------
        offset = int( offset + limit[1] )
        #------
        if not generator or generator == [] or 'nokeep' in sys.argv :
            Keep = False
        #------
        # ناتج الاستعلام أقل من تحديد limit
        if len(generator) < limit[1] and 'hhh' in sys.argv :
            Keep = False
        #------
        #
        if len(New_List) > 1 :
            fandi = ( len(New_List) / totallimit[1] ) * 100
            printe.output( 'fandi: %d.' % fandi )
            if fandi > 89:
                Keep = False
                printe.output( 'return New_List..' )
        #------
        if not ddf or limit[1] == 0 :
            Keep = False
    #------
    return New_List
    #for wd in generator:
    #if (wd.exists()):
      #yield wd
#------
def wd_from_file(usefilename):
  repo=pywikibot.Site('wikidata','wikidata').data_repository()
  csvfile=open(usefilename,'r')
  for alllines in csvfile:
    qitem=alllines[alllines.find('Q'):alllines.find(',')]
    if (len(qitem)>0):
      wditem=pywikibot.ItemPage(repo,qitem)
      yield wditem
def wd_user_edits(username,ucsite,totaledits):
  repo=pywikibot.Site('wikidata','wikidata').data_repository()
  useredits=pg.UserContributionsGenerator(username,site=ucsite,total=totaledits,namespaces=[0])
  for oneedit in useredits:
    if (oneedit.exists()):
      wd=pywikibot.ItemPage( repo , oneedit.title() )
      if (wd.exists()):
        yield wd
def sparql_nodescription(sparql):
  return 'select distinct ?item where {{%s}filter (!bound(?itemDescription))}' % sparql
def some_items():
  repo=pywikibot.Site('wikidata','wikidata').data_repository()
  do_these=['Q52504095','Q52501574']  #scenografino / dramaturgino
  do_these=['Q62507873','Q62898370']  #null edits
  for one_item in do_these:
    wd=pywikibot.ItemPage(repo,one_item)
    if (wd.exists()):
      yield wd
def newest_items(repo,site):
    for item in pg.NewPagesPageGenerator(site):
        break
    startno=int(item.title()[1:])
    for itemno in range(startno,0,-1):
        item=pywikibot.ItemPage(repo,'Q%d'%itemno)
        yield(item)
def generator_last_hour():
    timenow=None
    site=pywikibot.Site('wikidata','wikidata')
    repo=site.data_repository()
    generator=newest_items(repo,site);
    generator=pg.NewpagesPageGenerator(site)
    for item in generator:
      if timenow == None:
        timenow=item.oldest_revision.timestamp
        endtime=timenow-timedelta(1.0/24.0);
        untilltime=endtime-timedelta(0.001);
      if (item.oldest_revision.timestamp > untilltime):
        #print(item.title())
        item=pywikibot.ItemPage( repo , item.title() )
        if (item.exists()):
          #print(item.title())
          yield item
      else:
        printe.output('Klaar: {}'.format(item.oldest_revision.timestamp) )
        break
#======
'''
query = 'link[nlwiki]'
sparql_query4 = 'SELECT * {{SELECT ?item WHERE { ?wiki0 <http://schema.org/about> ?item . ?wiki0 <http://schema.org/isPartOf> <https://nl.wikipedia.org/> {service wikibase:label{bd:serviceParam wikibase:language 'nl' . }}}} filter (!bound(?itemDescription))}   '
sparql_query3 = 'SELECT * {{SELECT ?item WHERE { ?wiki0 <http://schema.org/about> ?item . ?wiki0 <http://schema.org/isPartOf> <https://nl.wikipedia.org/> }} }   '
#sparql_query = 'SELECT ?item WHERE {{SELECT ?item WHERE {hint:Query hint:optimizer 'None' .{SELECT ?item WHERE {?item wdt:P31 wd:Q4167836 .} LIMIT 275000}OPTIONAL { ?item schema:description ?itemDescription  }filter (!bound(?itemDescription)) }} SERVICE wikibase:label {  bd:serviceParam wikibase:language 'nl' .  }}'
#sparql_query=sparql_nodescription('select ?item where {?item wdt:P31 wd:Q5633421. OPTIONAL { ?item schema:description ?itemDescription  } }')
#sparql_query = 'select ?item where {?item wdt:P31 wd:Q202444 }'
sparql_query3 = 'select ?item where {?item wdt:P31 wd:Q5633421 }'
#
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q13442814 .     ?item wdt:P577 ?published .     filter ((?published > "1800-01-01T00:00:00Z"^^xsd:dateTime) && (?published < "2000-01-01T00:00:00Z"^^xsd:dateTime)) }'
#sparql_query = 'SELECT ?item WHERE {?item wdt:P27 wd:%s . ?item wdt:P31 wd:Q5 . ?item wdt:P106 ?beroep optional { ?item schema:description ?itemDescription . FILTER(lang(?itemDescription)='nl') } .  FILTER (REGEX(STR(?itemDescription), "n[/]a", 'i'))}'
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q207628 . OPTIONAL {?item schema:description ?itemdescription filter (lang(?itemdescription) = \"nl\").  } FILTER (!BOUND(?itemdescription))} '  #church no description
#sparql_query = 'select ?item where {?item wdt:P31 wd:Q207628}'
#sparql_query = 'select ?item where {?item wdt:P31 wd:Q5 . ?item wdt:P106 ?beroep . ?item wdt:P27 wd:%s . {service wikibase:label{bd:serviceParam wikibase:language 'nl' . }} OPTIONAL { ?item schema:description ?d .  FILTER(lang(?d)='nl') } filter (!bound(?d))}'
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q3184121 . ?item wdt:P17 wd:%s}'  #basisschool per land
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q1077097 }'
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q985488}' #bewonersgemeenschap in ?land
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q4830453}' #onderneming
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q21278897}' #doorverwijzing naar wiktionary
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q5084}' #gehucht -> test
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q55488}' #spoorwegstation -> test
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q43229}' #organisatie
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q17329259}' #encyclopedsich artikel
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q207628}' #
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q23397}' #meer
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q1004 }' #stripverhaal
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q14406742 . }' #stripreeks
#sparql_query = 'select ?item where {?item wdt:P31 wd:Q34442 . ?item wdt:P17 ?land}' #weg in land
#sparql_query = 'select ?item where {?item wdt:P31 wd:Q273057}' #discografie
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q486972 . ?item wdt:P17 wd:%s}'  #nederzetting per land
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q101352} ' #achternaam
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q7366}' #lied
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q5. ?item wdt:P106 wd:Q2526255}' #filmregisseur
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q15416}' #televisieprogramma
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q134556}' #single
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q3305213}' #3. schilderij
#sparql_query = 'SELECT ?item where {?item wdt:P31 wd:Q4167410 . ?item wdt:P17 ?land}' #disambiguation-page
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q1539532}' #sportseizoen -> pass
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q737498}' #academisch tijdschrift
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q166735}' #broekbos
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q54050}' #heuvel
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q253019}' #ortsteil
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q7075}' #bibliotheek
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q21014462}' #cel lijn 100.000++
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q5 . ?item wdt:P106 wd:Q1028181 . ?item wdt:P27 ?land}'  #kunstschilders geboren in een land
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q178122}'  #aria
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q3331189}' #2d2 #uitgave van P50
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q1344}'     #3d3 #opera van P86
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q742421}' #theatergezelschap
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q4022}' #rivier
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q180684}' #conflict
##sparql_query = 'select distinct ?item where {?item wdt:P31 wd:Q571 . ?item wdt:P50 ?auth}' #boek met auteur
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q732577 . ?item wdt:P123 ?itsthere}' #badmintonners
#sparql_query = 'select ?item where {  ?item wdt:P31 wd:Q5 .   ?item wdt:P106 wd:Q639669 .   ?item wdt:P27 ?land . }' #zwemmers
#sparql_query = 'select ?item where {  ?item wdt:P31 wd:Q5 .   ?item wdt:P106 ?beroep .   ?item wdt:P27 wd:Q183 . }' #belgen met een beroep
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q5783996}' #cottage
#sparql_query = 'select ?item where {?item wdt:P31 wd:Q3863}'    #كويكب
#sparql_query = 'select ?item where {?item wdt:P31 wd:Q726242}' #LLYR-ster
#sparql_query = 'SELECT * { ?item schema:description 'onderzoeker'@nl . ?item wdt:P27 wd:%s }'
#sparql_query = 'SELECT * { ?item schema:description 'tennisser'@nl . ?item wdt:P27 ?land}' #
#sparql_query = 'SELECT ?item WHERE {?item wdt:P31 wd:Q3947}' #
#sparql_query = 'select ?item ?land where { ?item wdt:P31 wd:Q5. ?item wdt:P106 wd:Q1650915. ?item wdt:P27 ?land.}'
#sparql_query = 'SELECT ?item {?item wdt:P31 wd:Q13442814 . OPTIONAL { ?item schema:description ?d . FILTER(lang(?d)='nl') }  FILTER( !BOUND(?d) )} LIMIT 1000'
#sparql_query='SELECT ?item WHERE { ?item wdt:P31 wd:Q5 . ?item wdt:P106 ?dummy0 . ?wiki0 <http://schema.org/about> ?item . ?wiki0 <http://schema.org/isPartOf> <https://nl.wikipedia.org/> {service wikibase:label{bd:serviceParam wikibase:language 'nl' . }}}'  #claim[31:5] and claim[106] and link[nlwiki]
'''
#------
#======
def main(debug=False):
    maxwrites=1
    print ('main')
    global mailmessage
    sasa = ''
    pigenerator=None
    #------
    sasa = SPARQLSE.get( sparqler[1].strip() , '' )
    #------
    if sasa == '':
        printe.output( '%s not in SPARQLSE' % sparqler[1] )
        sasa = '''SELECT ?item WHERE { ?item wdt:P31 wd:%s . FILTER NOT EXISTS { ?item schema:description ?itemar. FILTER((LANG(?itemar)) = 'ar') } } '''  % sparqler[1]
    #------
    ssqq = [sasa]
    if sparqler[1].strip() == '' or 'allkeys' in sys.argv :
        ssqq = [ SPARQLSE[x] for x in SPARQLSE.keys() ]
        printe.output( 'work in all SPARQLSE.keys() len: %d' % len(ssqq) )
    #------
    numg = 0
    #------
    ssqq = random.sample(ssqq, int(len(ssqq)))
    #------
    for sparql_query in ssqq :
        #------
        numg +=1
        #------
        printe.output( '-------------------------' )
        printe.output("<<lightblue>> query %d from %d :" % (numg , len(ssqq)) )
        #------
        if Offq[1] > 0 and Offq[1] > numg : continue
        #------
        #sparql_query = 'select ?item where {?item wdt:P31 wd:Q3508250}' #
        #site=pywikibot.Site('wikidata','wikidata')
        repo={}#site.data_repository()
        items_processed=0
        lng = run_lng
        if debug: printe.output('main-1')
        if (True):
          #pigenerator = wd_from_file('/stack/query.csv')
          #pigenerator = wd_all_countries(sparql_query)
          #pigenerator = wd_all_without_description()
          #pigenerator=wd_one_without_description('Q189004')  #onderwijsinstelling
          #pigenerator = wd_all_simple_P131()
          #pigenerator = wd_user_edits('Edoderoobot',site,511111)
          #pigenerator = wd_all_items(1)
          #pigenerator = lastXnewpages(1999999) #max one month of newpages anyways
          #pigenerator = wd_all_items(-1)
          #pigenerator=some_items()
          pigenerator = wd_sparql_query( sparql_query , ddf = True )
          mailmessage = 'query: {}\nItems processed: {}'.format( sparql_query , items_processed )
          #mailmessage='one-without-description: Q19389637'
        if (pigenerator == None) or (forcehourly):
           printe.output('Force hourly script...')
           pigenerator=generator_last_hour()
           mailmessage='hourly'
        if (commit):
            printe.output('Commit')
        else:
            printe.output('No commit modus!')
        totalreads=0
        #pigenerator = [ {'item': 'http://www.wikidata.org/entity/Q19019359'} ]
        for wd in pigenerator:
            printe.output( "<<lightblue>> ============" )
            #printe.output( wd )
            q = wd['item'].split("/entity/")[1]
            totalreads+=1
            #if prelog: log_premature(q)
            if debug: printe.output('Found: %s' % q )
            printe.output( "p%d/%d q:%s" % ( totalreads , len(pigenerator) , q ) )
            thisfound,thisone = action_one_item( run_lng, q , item = wd )
            items_processed += thisone
            #if (items_processed>12): break
            #if ((items_processed>maxwrites) and (maxwrites>0)): break
        if New_QS[1] != []:
            himoAPI.QS_line( "||".join( New_QS[1] ) , user = 'Mr.Ibrahembot' )
        printe.output('Klaar: %s' % items_processed )
        #if (items_processed>10):
          #sendmail('Run completed!',totalreads,items_processed);  #often runs for two weeks ... mail me to notify
def wd_all_items():
  startrange= 80999999
  stoprange = 80000000
  startrange= 79788588
  stoprange = 79000000
  startrange= 78823351
  stoprange = 78000000
  startrange= 77196790
  stoprange = 77000000
  #startrange= 50000100
  #stoprange = 50000000
  repo=pywikibot.Site('wikidata','wikidata').data_repository()
  for itemno in range(startrange,stoprange):
   #try:
    wd=pywikibot.ItemPage(repo,'Q%d' % itemno)
    if not wd.isRedirectPage():
     if wd.exists():
      yield wd
    else:
      pass
    itemno -= 1
   #except:
     #pass
#======
print(' start np/nldes.py ')
forcehourly=False
#======
if __name__ == '__main__':
    if 'test' in sys.argv:
        action_one_item('ar', 0, 'Q162210' )
    else:
        main()
#======